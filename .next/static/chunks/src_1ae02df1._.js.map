{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/FYP/fypv2/src/animation/letter_glitch.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRef, useEffect } from \"react\";\n\nconst LetterGlitch = ({\n  glitchColors = [\"#2b4539\", \"#61dca3\", \"#61b3dc\"],\n  glitchSpeed = 50,\n  centerVignette = false,\n  outerVignette = true,\n  smooth = true,\n}: {\n  glitchColors: string[];\n  glitchSpeed: number;\n  centerVignette: boolean;\n  outerVignette: boolean;\n  smooth: boolean;\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const animationRef = useRef<number | null>(null);\n  const letters = useRef<\n    {\n      char: string;\n      color: string;\n      targetColor: string;\n      colorProgress: number;\n    }[]\n  >([]);\n  const grid = useRef({ columns: 0, rows: 0 });\n  const context = useRef<CanvasRenderingContext2D | null>(null);\n  const lastGlitchTime = useRef(Date.now());\n\n  const fontSize = 16;\n  const charWidth = 10;\n  const charHeight = 20;\n\n  const lettersAndSymbols = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"!\",\n    \"@\",\n    \"#\",\n    \"$\",\n    \"&\",\n    \"*\",\n    \"(\",\n    \")\",\n    \"-\",\n    \"_\",\n    \"+\",\n    \"=\",\n    \"/\",\n    \"[\",\n    \"]\",\n    \"{\",\n    \"}\",\n    \";\",\n    \":\",\n    \"<\",\n    \">\",\n    \",\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n  ];\n\n  const getRandomChar = () => {\n    return lettersAndSymbols[\n      Math.floor(Math.random() * lettersAndSymbols.length)\n    ];\n  };\n\n  const getRandomColor = () => {\n    return glitchColors[Math.floor(Math.random() * glitchColors.length)];\n  };\n\n  const hexToRgb = (hex: string) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n      return r + r + g + g + b + b;\n    });\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16),\n        }\n      : null;\n  };\n\n  const interpolateColor = (\n    start: { r: number; g: number; b: number },\n    end: { r: number; g: number; b: number },\n    factor: number\n  ) => {\n    const result = {\n      r: Math.round(start.r + (end.r - start.r) * factor),\n      g: Math.round(start.g + (end.g - start.g) * factor),\n      b: Math.round(start.b + (end.b - start.b) * factor),\n    };\n    return `rgb(${result.r}, ${result.g}, ${result.b})`;\n  };\n\n  const calculateGrid = (width: number, height: number) => {\n    const columns = Math.ceil(width / charWidth);\n    const rows = Math.ceil(height / charHeight);\n    return { columns, rows };\n  };\n\n  const initializeLetters = (columns: number, rows: number) => {\n    grid.current = { columns, rows };\n    const totalLetters = columns * rows;\n    letters.current = Array.from({ length: totalLetters }, () => ({\n      char: getRandomChar(),\n      color: getRandomColor(),\n      targetColor: getRandomColor(),\n      colorProgress: 1,\n    }));\n  };\n\n  const resizeCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const parent = canvas.parentElement;\n    if (!parent) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const rect = parent.getBoundingClientRect();\n    if (!rect || rect.width === 0 || rect.height === 0) return;\n\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n\n    canvas.style.width = `${rect.width}px`;\n    canvas.style.height = `${rect.height}px`;\n\n    if (context.current) {\n      context.current.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    const { columns, rows } = calculateGrid(rect.width, rect.height);\n    initializeLetters(columns, rows);\n    drawLetters();\n  };\n\n  const drawLetters = () => {\n    if (!context.current || letters.current.length === 0) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    if (!rect) return;\n\n    const ctx = context.current;\n    ctx.clearRect(0, 0, rect.width, rect.height);\n    ctx.font = `${fontSize}px monospace`;\n    ctx.textBaseline = \"top\";\n\n    letters.current.forEach((letter, index) => {\n      const x = (index % grid.current.columns) * charWidth;\n      const y = Math.floor(index / grid.current.columns) * charHeight;\n      ctx.fillStyle = letter.color;\n      ctx.fillText(letter.char, x, y);\n    });\n  };\n\n  const updateLetters = () => {\n    if (!letters.current || letters.current.length === 0) return;\n\n    const updateCount = Math.max(1, Math.floor(letters.current.length * 0.05));\n\n    for (let i = 0; i < updateCount; i++) {\n      const index = Math.floor(Math.random() * letters.current.length);\n      if (!letters.current[index]) continue;\n\n      letters.current[index].char = getRandomChar();\n      letters.current[index].targetColor = getRandomColor();\n\n      if (!smooth) {\n        letters.current[index].color = letters.current[index].targetColor;\n        letters.current[index].colorProgress = 1;\n      } else {\n        letters.current[index].colorProgress = 0;\n      }\n    }\n  };\n\n  const handleSmoothTransitions = () => {\n    let needsRedraw = false;\n    letters.current.forEach((letter) => {\n      if (letter.colorProgress < 1) {\n        letter.colorProgress += 0.05;\n        if (letter.colorProgress > 1) letter.colorProgress = 1;\n\n        const startRgb = hexToRgb(letter.color);\n        const endRgb = hexToRgb(letter.targetColor);\n        if (startRgb && endRgb) {\n          letter.color = interpolateColor(\n            startRgb,\n            endRgb,\n            letter.colorProgress\n          );\n          needsRedraw = true;\n        }\n      }\n    });\n\n    if (needsRedraw) {\n      drawLetters();\n    }\n  };\n\n  const animate = () => {\n    if (!canvasRef.current) return; // Check if canvas still exists\n\n    const now = Date.now();\n    if (now - lastGlitchTime.current >= glitchSpeed) {\n      updateLetters();\n      drawLetters();\n      lastGlitchTime.current = now;\n    }\n\n    if (smooth) {\n      handleSmoothTransitions();\n    }\n\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    let isMounted = true;\n    context.current = canvas.getContext(\"2d\");\n\n    if (isMounted) {\n      resizeCanvas();\n      animate();\n    }\n\n    let resizeTimeout: NodeJS.Timeout;\n\n    const handleResize = () => {\n      if (!isMounted) return;\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        if (!isMounted) return;\n        cancelAnimationFrame(animationRef.current as number);\n        resizeCanvas();\n        animate();\n      }, 100);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      isMounted = false;\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      window.removeEventListener(\"resize\", handleResize);\n      clearTimeout(resizeTimeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [glitchSpeed, smooth]);\n\n  const containerStyle = {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: \"#000000\",\n    overflow: \"hidden\",\n    zIndex: -1,\n  };\n\n  const canvasStyle = {\n    display: \"block\",\n    width: \"100%\",\n    height: \"100%\",\n  };\n\n  const outerVignetteStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    pointerEvents: \"none\",\n    background:\n      \"radial-gradient(circle, rgba(0,0,0,0) 60%, rgba(0,0,0,1) 100%)\",\n  };\n\n  const centerVignetteStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    pointerEvents: \"none\",\n    background:\n      \"radial-gradient(circle, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 60%)\",\n  };\n\n  return (\n    <div style={containerStyle as React.CSSProperties}>\n      <canvas ref={canvasRef} style={canvasStyle} />\n      {outerVignette && (\n        <div style={outerVignetteStyle as React.CSSProperties}></div>\n      )}\n      {centerVignette && (\n        <div style={centerVignetteStyle as React.CSSProperties}></div>\n      )}\n    </div>\n  );\n};\n\nexport default LetterGlitch;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///E:/FYP/fypv2/src/animation/blur_text.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport type { Transition } from \"framer-motion\";\r\nimport { useEffect, useRef, useState, useMemo } from \"react\";\r\n\r\ntype BlurTextProps = {\r\n  text?: string;\r\n  delay?: number;\r\n  className?: string;\r\n  animateBy?: \"words\" | \"letters\";\r\n  direction?: \"top\" | \"bottom\";\r\n  threshold?: number;\r\n  rootMargin?: string;\r\n  animationFrom?: Record<string, string | number>;\r\n  animationTo?: Array<Record<string, string | number>>;\r\n  easing?: (t: number) => number;\r\n  onAnimationComplete?: () => void;\r\n  stepDuration?: number;\r\n};\r\n\r\nconst buildKeyframes = (\r\n  from: Record<string, string | number>,\r\n  steps: Array<Record<string, string | number>>\r\n): Record<string, Array<string | number>> => {\r\n  const keys = new Set<string>([\r\n    ...Object.keys(from),\r\n    ...steps.flatMap((s) => Object.keys(s)),\r\n  ]);\r\n\r\n  const keyframes: Record<string, Array<string | number>> = {};\r\n  keys.forEach((k) => {\r\n    keyframes[k] = [from[k], ...steps.map((s) => s[k])];\r\n  });\r\n  return keyframes;\r\n};\r\n\r\nconst BlurText: React.FC<BlurTextProps> = ({\r\n  text = \"\",\r\n  delay = 200,\r\n  className = \"\",\r\n  animateBy = \"words\",\r\n  direction = \"top\",\r\n  threshold = 0.1,\r\n  rootMargin = \"0px\",\r\n  animationFrom,\r\n  animationTo,\r\n  easing = (t) => t,\r\n  onAnimationComplete,\r\n  stepDuration = 0.35,\r\n}) => {\r\n  const elements = animateBy === \"words\" ? text.split(\" \") : text.split(\"\");\r\n  const [inView, setInView] = useState(false);\r\n  const ref = useRef<HTMLParagraphElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setInView(true);\r\n          observer.unobserve(ref.current as Element);\r\n        }\r\n      },\r\n      { threshold, rootMargin }\r\n    );\r\n    observer.observe(ref.current);\r\n    return () => observer.disconnect();\r\n  }, [threshold, rootMargin]);\r\n\r\n  const defaultFrom = useMemo(\r\n    () =>\r\n      direction === \"top\"\r\n        ? { filter: \"blur(10px)\", opacity: 0, y: -50 }\r\n        : { filter: \"blur(10px)\", opacity: 0, y: 50 },\r\n    [direction]\r\n  );\r\n\r\n  const defaultTo = useMemo(\r\n    () => [\r\n      {\r\n        filter: \"blur(5px)\",\r\n        opacity: 0.5,\r\n        y: direction === \"top\" ? 5 : -5,\r\n      },\r\n      { filter: \"blur(0px)\", opacity: 1, y: 0 },\r\n    ],\r\n    [direction]\r\n  );\r\n\r\n  const fromSnapshot = animationFrom ?? defaultFrom;\r\n  const toSnapshots = animationTo ?? defaultTo;\r\n\r\n  const stepCount = toSnapshots.length + 1;\r\n  const totalDuration = stepDuration * (stepCount - 1);\r\n  const times = Array.from({ length: stepCount }, (_, i) =>\r\n    stepCount === 1 ? 0 : i / (stepCount - 1)\r\n  );\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      className={className}\r\n      style={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n    >\r\n      {elements.map((segment, index) => {\r\n        const animateKeyframes = buildKeyframes(fromSnapshot, toSnapshots);\r\n\r\n        const spanTransition: Transition = {\r\n          duration: totalDuration,\r\n          times,\r\n          delay: (index * delay) / 1000,\r\n        };\r\n        (spanTransition as any).ease = easing;\r\n\r\n        return (\r\n          <motion.span\r\n            key={index}\r\n            initial={fromSnapshot}\r\n            animate={inView ? animateKeyframes : fromSnapshot}\r\n            transition={spanTransition}\r\n            onAnimationComplete={\r\n              index === elements.length - 1 ? onAnimationComplete : undefined\r\n            }\r\n            style={{\r\n              display: \"inline-block\",\r\n              willChange: \"transform, filter, opacity\",\r\n            }}\r\n          >\r\n            {segment === \" \" ? \"\\u00A0\" : segment}\r\n            {animateBy === \"words\" && index < elements.length - 1 && \"\\u00A0\"}\r\n          </motion.span>\r\n        );\r\n      })}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default BlurText;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///E:/FYP/fypv2/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport LetterGlitch from \"../../animation/letter_glitch\";\r\nimport BlurText from \"../../animation/blur_text\";\r\nimport \"../app.css\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum?: any;\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const [account, setAccount] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const router = useRouter();\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        setIsConnecting(true);\r\n        setError(null);\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n        setAccount(accounts[0]);\r\n\r\n        // Store wallet address in localStorage\r\n        localStorage.setItem(\"walletAddress\", accounts[0]);\r\n\r\n        // Show success message briefly before redirecting\r\n        setTimeout(() => {\r\n          router.push(\"/dashboard\");\r\n        }, 1000);\r\n      } catch (err: any) {\r\n        setError(err.message || \"Failed to connect wallet\");\r\n        setIsConnecting(false);\r\n      }\r\n    } else {\r\n      setError(\"MetaMask is not installed. Please install it to use this app.\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setAccount(null);\r\n    setError(null);\r\n  };\r\n\r\n  const handleBackToLanding = () => {\r\n    router.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"centered-bg\">\r\n      <div className=\"glitch-bg\">\r\n        <LetterGlitch\r\n          glitchColors={[\"#2b4539\", \"#61dca3\", \"#61b3dc\"]}\r\n          glitchSpeed={50}\r\n          centerVignette={true}\r\n          outerVignette={false}\r\n          smooth={true}\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"pretty-button\"\r\n        onClick={handleBackToLanding}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"20px\",\r\n          right: \"20px\",\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        Back\r\n      </button>\r\n      <div className=\"main-content\">\r\n        <div className=\"fancy-border\">\r\n          <div className=\"centered-content bordered-inner\">\r\n            <BlurText\r\n              text=\"Blocksecure\"\r\n              className=\"big-bold-white bitcount-grid-single\"\r\n              animateBy=\"words\"\r\n              direction=\"top\"\r\n              delay={80}\r\n            />\r\n            {account ? (\r\n              <>\r\n                <p className=\"wallet-address\">Connected wallet: {account}</p>\r\n                <p className=\"text-green-500 mt-2\">\r\n                  Redirecting to dashboard...\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  className=\"pretty-button mb-4\"\r\n                  onClick={connectWallet}\r\n                  disabled={isConnecting}\r\n                >\r\n                  {isConnecting ? \"Connecting...\" : \"Connect Wallet\"}\r\n                </button>\r\n              </>\r\n            )}\r\n            {error && <p className=\"mt-4 text-red-500\">{error}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;;;AALA;;;;;;;AAce,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACtD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,gBAAgB;QACpB,IAAI,OAAO,QAAQ,EAAE;YACnB,IAAI;gBACF,gBAAgB;gBAChB,SAAS;gBACT,MAAM,WAAW,IAAI,mLAAA,CAAA,SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;gBAC3D,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;gBAC9D,WAAW,QAAQ,CAAC,EAAE;gBAEtB,uCAAuC;gBACvC,aAAa,OAAO,CAAC,iBAAiB,QAAQ,CAAC,EAAE;gBAEjD,kDAAkD;gBAClD,WAAW;oBACT,OAAO,IAAI,CAAC;gBACd,GAAG;YACL,EAAE,OAAO,KAAU;gBACjB,SAAS,IAAI,OAAO,IAAI;gBACxB,gBAAgB;YAClB;QACF,OAAO;YACL,SAAS;QACX;IACF;IAEA,MAAM,SAAS;QACb,WAAW;QACX,SAAS;IACX;IAEA,MAAM,sBAAsB;QAC1B,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,qIAAA,CAAA,UAAY;oBACX,cAAc;wBAAC;wBAAW;wBAAW;qBAAU;oBAC/C,aAAa;oBACb,gBAAgB;oBAChB,eAAe;oBACf,QAAQ;;;;;;;;;;;0BAGZ,6LAAC;gBACC,WAAU;gBACV,SAAS;gBACT,OAAO;oBACL,UAAU;oBACV,KAAK;oBACL,OAAO;oBACP,QAAQ;gBACV;0BACD;;;;;;0BAGD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,iIAAA,CAAA,UAAQ;gCACP,MAAK;gCACL,WAAU;gCACV,WAAU;gCACV,WAAU;gCACV,OAAO;;;;;;4BAER,wBACC;;kDACE,6LAAC;wCAAE,WAAU;;4CAAiB;4CAAmB;;;;;;;kDACjD,6LAAC;wCAAE,WAAU;kDAAsB;;;;;;;6DAKrC;0CACE,cAAA,6LAAC;oCACC,WAAU;oCACV,SAAS;oCACT,UAAU;8CAET,eAAe,kBAAkB;;;;;;;4BAIvC,uBAAS,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxD;GAjGwB;;QAIP,qIAAA,CAAA,YAAS;;;KAJF","debugId":null}}]
}